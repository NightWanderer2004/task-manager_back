# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Task {
  id: ID!
  name: String!
  dateStart: Timestamp!
  dateEnd: Timestamp!
  taskId: Float!
  category: Category!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Category {
  id: ID!
  name: String!
  dateCreated: Timestamp!
  userId: Int
  user: User!
  tasks: [Task!]!
}

type User {
  id: ID!
  email: String!
  password: String
  role: String!
  categories: [Category!]!
}

type LoginResponse {
  token: String!
  user: User!
}

type Query {
  users: [User!]!
  categories: [Category!]!
  tasks: [Task!]!
}

type Mutation {
  createUser(input: CreateUserDto!): User!
  createCategory(input: CreateCategoryDto!): Category!
  updateCategory(id: Float!, input: CreateCategoryDto!): Category!
  deleteCategory(id: Float!): Category!
  createTask(input: CreateTaskDto!): Task!
  updateTask(id: Float!, input: CreateTaskDto!): Task!
  deleteTask(id: Float!): Task!
  login(loginUser: LoginUser!): LoginResponse!
  signup(signupUser: CreateUserDto!): User!
}

input CreateUserDto {
  email: String!
  password: String!
  role: String!
}

input CreateCategoryDto {
  name: String!
  dateCreated: Timestamp!
  userId: Int
}

input CreateTaskDto {
  name: String!
  dateStart: Timestamp!
  dateEnd: Timestamp!
  taskId: Int
}

input LoginUser {
  email: String!
  password: String!
}